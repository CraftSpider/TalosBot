"""
    Talos utils stub file
"""

from typing import Dict, Union, List

from discord.talos import Talos
import logging
import discord
import discord.ext.commands as dcommands
import utils as tsql

import utils as paginators

log: logging.Logger = ...
fullwidth_transform: Dict[str, str] = ...
tz_map: Dict[str, float] = ...

class TalosFormatter(dcommands.HelpFormatter):

    _paginator: Union[dcommands.Paginator, paginators.PaginatedEmbed] = ...

    # noinspection PyMissingConstructor
    def __init__(self) -> None: ...

    @property
    async def clean_prefix(self) -> str: return ...

    async def get_command_signature(self) -> str: ...

    async def get_ending_note(self) -> str: ...

    @staticmethod
    def capital_split(text: str) -> str: ...

    def embed_shorten(self, text: str) -> str: ...

    def _subcommands_field_value(self, commands: List[dcommands.Command]) -> str: ...

    def _add_subcommands_to_page(self, max_width: int, commands: List[dcommands.Command]) -> None: ...

    async def format(self) -> Union[List[str], List[discord.Embed]]: ...

    async def embed_format(self) -> List[discord.Embed]: ...

    async def string_format(self) -> List[str]: ...



def to_snake_case(text: str) -> str: ...

def _perms_check(self: TalosCog, ctx: dcommands.Context) -> bool: ...

class TalosCog:

    __slots__ = ("bot", "database")
    bot: Talos
    database: tsql.TalosDatabase

    def __init__(self, bot: Talos): ...

    def add_method(self, method: callable, name: str=...) -> None: ...
