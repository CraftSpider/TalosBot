
from typing import Tuple, Optional, Dict, List, Union, overload
from utils import Document
import aiohttp
import io

def parse_dom(page: str) -> Optional[Document]: ...

class TalosHTTPClient(aiohttp.ClientSession):

    __slots__ = ("username", "password", "btn_key", "cat_key", "nano_tries")

    NANO_URL: str = ...
    BTN_URL: str = ...
    CAT_URL: str = ...
    XKCD_URL: str = ...

    username: str
    password: str
    btn_key: str
    cat_key: str
    nano_tries: int

    # noinspection PyMissingConstructor
    def __init__(self, *args, **kwargs) -> None: ...

    async def get_site(self, url: str, **kwargs) -> Document: ...

    async def btn_get_names(self, gender: str = ..., usage: str = ..., number: int = ..., surname: bool = ...) -> List[str]: ...

    async def nano_get_page(self, url: str) -> Optional[Document]: ...

    async def nano_get_user(self, username: str) -> Optional[Document]: ...

    @overload
    async def nano_get_novel(self, username: str, novel_name: str = ...) -> Tuple[str, str]: ...
    @overload
    async def nano_get_novel(self, username: str, novel_name: str = ...) -> Tuple[None, None]: ...

    async def nano_login_client(self) -> int: ...

    async def get_cat_pic(self) -> io.BytesIO: ...

    async def get_xkcd(self, xkcd) -> Dict[str, Union[str, io.BytesIO]]: ...